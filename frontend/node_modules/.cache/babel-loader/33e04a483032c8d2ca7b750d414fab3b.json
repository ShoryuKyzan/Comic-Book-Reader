{"ast":null,"code":"// production url, this may be typically baked into configuration instead of here\nBACKEND_URL = 'http://api.comicsite.com';\ndevelopmentMode = false;\nproductionMode = true; // If in development mode, change the backend url\n\nif (window.location.port === '3000') {\n  BACKEND_URL = 'http://api.comicsite.com:8000';\n  developmentMode = true;\n  productionMode = false;\n}\n\nfunction callJSONMethod(uri, data) {\n  return fetch(BACKEND_URL + uri, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error(response.json());\n    }\n  }).catch(reason => {\n    throw new Error(reason);\n  });\n}\n\nfunction callGETMethod(uri) {\n  return fetch(BACKEND_URL + uri).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error(response.json());\n    }\n  }).catch(reason => {\n    throw new Error(reason);\n  });\n}\n\nexport class Series {\n  // these are defined as variables so that they can be changed in one place\n  static SERIES() {\n    return '/series';\n  }\n\n  // cant do this any other way in ES6 right now\n  static CHAPTER() {\n    return '/chapters';\n  }\n\n  // cant do this any other way in ES6 right now\n  static async getByName(name) {\n    // XXX MOCK\n    return {\n      id: 1,\n      name: 'Lonely Hooves'\n    }; // TODO test below\n\n    return await callGETMethod(Series.SERIES() + '/search/' + name);\n  }\n\n  static async chapters(seriesId) {\n    // XXX MOCK\n    return [{\n      id: 1,\n      name: 'Chapter 1',\n      image: 'abc'\n    }, {\n      id: 2,\n      name: 'Chapter 2',\n      image: 'abc'\n    }, {\n      id: 3,\n      name: 'Chapter 3',\n      image: 'abc'\n    }, {\n      id: 4,\n      name: 'Chapter 4',\n      image: 'abc'\n    }]; // TODO test below\n\n    return await callGETMethod(Series.PREFIX() + '/' + seriesId + Series.CHAPTER() + '/list');\n  }\n\n}\nvar Backend = {\n  Series\n};\nexport default Backend;","map":{"version":3,"sources":["C:/Users/follo/Development/Comic-Book-Reader/project/frontend/src/api/Backend.js"],"names":["BACKEND_URL","developmentMode","productionMode","window","location","port","callJSONMethod","uri","data","fetch","method","headers","body","JSON","stringify","then","response","status","json","Error","catch","reason","callGETMethod","Series","SERIES","CHAPTER","getByName","name","id","chapters","seriesId","image","PREFIX","Backend"],"mappings":"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","sourcesContent":["// production url, this may be typically baked into configuration instead of here\r\nBACKEND_URL = 'http://api.comicsite.com';\r\ndevelopmentMode = false;\r\nproductionMode = true;\r\n\r\n// If in development mode, change the backend url\r\nif(window.location.port === '3000')\r\n{\r\n    BACKEND_URL = 'http://api.comicsite.com:8000'\r\n    developmentMode = true;\r\n    productionMode = false;\r\n}\r\n\r\nfunction callJSONMethod(uri, data){\r\n    return fetch(BACKEND_URL + uri, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(response => {\r\n        if(response.status === 200){\r\n            return response.json();\r\n        }else{\r\n            throw new Error(response.json());\r\n        }\r\n    })\r\n    .catch(reason => {\r\n        throw new Error(reason);\r\n    });\r\n}\r\n\r\nfunction callGETMethod(uri){\r\n    return fetch(BACKEND_URL + uri).then(response => {\r\n        if(response.status === 200){\r\n            return response.json();\r\n        }else{\r\n            throw new Error(response.json());\r\n        }\r\n    })\r\n    .catch(reason => {\r\n        throw new Error(reason);\r\n    });\r\n}\r\n\r\nexport class Series {\r\n        \r\n    // these are defined as variables so that they can be changed in one place\r\n    static SERIES () { return '/series'}; // cant do this any other way in ES6 right now\r\n    static CHAPTER () { return '/chapters'}; // cant do this any other way in ES6 right now\r\n\r\n    static async getByName(name){\r\n        // XXX MOCK\r\n        return {\r\n            id: 1,\r\n            name: 'Lonely Hooves'\r\n        };\r\n\r\n        // TODO test below\r\n        return await callGETMethod(Series.SERIES() + '/search/' + name);\r\n    }\r\n\r\n    static async chapters(seriesId){\r\n        // XXX MOCK\r\n        return [\r\n            {\r\n                id: 1,\r\n                name: 'Chapter 1',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Chapter 2',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Chapter 3',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Chapter 4',\r\n                image: 'abc'\r\n            },\r\n        ];\r\n\r\n        // TODO test below\r\n        return await callGETMethod(Series.PREFIX() + '/' + seriesId + Series.CHAPTER() + '/list');\r\n    }\r\n\r\n}\r\n\r\n\r\nvar Backend = {\r\n    Series\r\n};\r\n\r\nexport default Backend;"]},"metadata":{},"sourceType":"module"}