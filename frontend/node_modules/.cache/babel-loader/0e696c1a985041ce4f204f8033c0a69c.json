{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\follo\\\\Development\\\\Comic-Book-Reader\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\follo\\\\Development\\\\Comic-Book-Reader\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\follo\\\\Development\\\\Comic-Book-Reader\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\follo\\\\Development\\\\Comic-Book-Reader\\\\project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";// production url, this may be typically baked into configuration instead of here\nvar BACKEND_URL='http://api.comicsite.com';var developmentMode=false;var productionMode=true;// If in development mode, change the backend url\nif(window.location.port==='3000'){BACKEND_URL='http://api.comicsite.com:8000';developmentMode=true;productionMode=false;}function callJSONMethod(uri,data){return fetch(BACKEND_URL+uri,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status===200){return response.json();}else{throw new Error(response.json());}}).catch(function(reason){throw new Error(reason);});}function callGETMethod(uri){return fetch(BACKEND_URL+uri).then(function(response){if(response.status===200){return response.json();}else{throw new Error(response.json());}}).catch(function(reason){throw new Error(reason);});}export var Series=/*#__PURE__*/function(){function Series(){_classCallCheck(this,Series);}_createClass(Series,null,[{key:\"SERIES\",// these are defined as variables so that they can be changed in one place\nvalue:function SERIES(){return'/series';}},{key:\"CHAPTER\",// cant do this any other way in ES6 right now\nvalue:function CHAPTER(){return'/chapters';}},{key:\"getByName\",// cant do this any other way in ES6 right now\nvalue:function(){var _getByName=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(name){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",{id:1,name:'Lonely Hooves'});case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}}},_callee);}));function getByName(_x){return _getByName.apply(this,arguments);}return getByName;}()},{key:\"chapters\",value:function(){var _chapters=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(seriesId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",[{id:1,name:'Chapter 1',image:'abc'},{id:2,name:'Chapter 2',image:'abc'},{id:3,name:'Chapter 3',image:'abc'},{id:4,name:'Chapter 4',image:'abc'}]);case 3:return _context2.abrupt(\"return\",_context2.sent);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function chapters(_x2){return _chapters.apply(this,arguments);}return chapters;}()}]);return Series;}();var Backend={Series:Series};export default Backend;","map":{"version":3,"sources":["C:/Users/follo/Development/Comic-Book-Reader/project/frontend/src/api/Backend.js"],"names":["BACKEND_URL","developmentMode","productionMode","window","location","port","callJSONMethod","uri","data","fetch","method","headers","body","JSON","stringify","then","response","status","json","Error","catch","reason","callGETMethod","Series","name","id","seriesId","image","Backend"],"mappings":"+lBAAA;AACA,GAAIA,CAAAA,WAAW,CAAG,0BAAlB,CACA,GAAIC,CAAAA,eAAe,CAAG,KAAtB,CACA,GAAIC,CAAAA,cAAc,CAAG,IAArB,CAEA;AACA,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAyB,MAA5B,CACA,CACIL,WAAW,CAAG,+BAAd,CACAC,eAAe,CAAG,IAAlB,CACAC,cAAc,CAAG,KAAjB,CACH,CAED,QAASI,CAAAA,cAAT,CAAwBC,GAAxB,CAA6BC,IAA7B,CAAkC,CAC9B,MAAOC,CAAAA,KAAK,CAACT,WAAW,CAAGO,GAAf,CAAoB,CAC5BG,MAAM,CAAE,MADoB,CAE5BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFmB,CAK5BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CALsB,CAApB,CAAL,CAMJO,IANI,CAMC,SAAAC,QAAQ,CAAI,CAChB,GAAGA,QAAQ,CAACC,MAAT,GAAoB,GAAvB,CAA2B,CACvB,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAFD,IAEK,CACD,KAAM,IAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACE,IAAT,EAAV,CAAN,CACH,CACJ,CAZM,EAaNE,KAbM,CAaA,SAAAC,MAAM,CAAI,CACb,KAAM,IAAIF,CAAAA,KAAJ,CAAUE,MAAV,CAAN,CACH,CAfM,CAAP,CAgBH,CAED,QAASC,CAAAA,aAAT,CAAuBf,GAAvB,CAA2B,CACvB,MAAOE,CAAAA,KAAK,CAACT,WAAW,CAAGO,GAAf,CAAL,CAAyBQ,IAAzB,CAA8B,SAAAC,QAAQ,CAAI,CAC7C,GAAGA,QAAQ,CAACC,MAAT,GAAoB,GAAvB,CAA2B,CACvB,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAFD,IAEK,CACD,KAAM,IAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACE,IAAT,EAAV,CAAN,CACH,CACJ,CANM,EAONE,KAPM,CAOA,SAAAC,MAAM,CAAI,CACb,KAAM,IAAIF,CAAAA,KAAJ,CAAUE,MAAV,CAAN,CACH,CATM,CAAP,CAUH,CAED,UAAaE,CAAAA,MAAb,iHAEI;AAFJ,uBAGqB,CAAE,MAAO,SAAP,CAAiB,CAHxC,iBAG0C;AAH1C,wBAIsB,CAAE,MAAO,WAAP,CAAmB,CAJ3C,mBAI6C;AAJ7C,yGAM2BC,IAN3B,kJAQe,CACHC,EAAE,CAAE,CADD,CAEHD,IAAI,CAAE,eAFH,CARf,gUAiB0BE,QAjB1B,uJAmBe,CACH,CACID,EAAE,CAAE,CADR,CAEID,IAAI,CAAE,WAFV,CAGIG,KAAK,CAAE,KAHX,CADG,CAMH,CACIF,EAAE,CAAE,CADR,CAEID,IAAI,CAAE,WAFV,CAGIG,KAAK,CAAE,KAHX,CANG,CAWH,CACIF,EAAE,CAAE,CADR,CAEID,IAAI,CAAE,WAFV,CAGIG,KAAK,CAAE,KAHX,CAXG,CAgBH,CACIF,EAAE,CAAE,CADR,CAEID,IAAI,CAAE,WAFV,CAGIG,KAAK,CAAE,KAHX,CAhBG,CAnBf,6NAiDA,GAAIC,CAAAA,OAAO,CAAG,CACVL,MAAM,CAANA,MADU,CAAd,CAIA,cAAeK,CAAAA,OAAf","sourcesContent":["// production url, this may be typically baked into configuration instead of here\r\nvar BACKEND_URL = 'http://api.comicsite.com';\r\nvar developmentMode = false;\r\nvar productionMode = true;\r\n\r\n// If in development mode, change the backend url\r\nif(window.location.port === '3000')\r\n{\r\n    BACKEND_URL = 'http://api.comicsite.com:8000'\r\n    developmentMode = true;\r\n    productionMode = false;\r\n}\r\n\r\nfunction callJSONMethod(uri, data){\r\n    return fetch(BACKEND_URL + uri, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(response => {\r\n        if(response.status === 200){\r\n            return response.json();\r\n        }else{\r\n            throw new Error(response.json());\r\n        }\r\n    })\r\n    .catch(reason => {\r\n        throw new Error(reason);\r\n    });\r\n}\r\n\r\nfunction callGETMethod(uri){\r\n    return fetch(BACKEND_URL + uri).then(response => {\r\n        if(response.status === 200){\r\n            return response.json();\r\n        }else{\r\n            throw new Error(response.json());\r\n        }\r\n    })\r\n    .catch(reason => {\r\n        throw new Error(reason);\r\n    });\r\n}\r\n\r\nexport class Series {\r\n        \r\n    // these are defined as variables so that they can be changed in one place\r\n    static SERIES () { return '/series'}; // cant do this any other way in ES6 right now\r\n    static CHAPTER () { return '/chapters'}; // cant do this any other way in ES6 right now\r\n\r\n    static async getByName(name){\r\n        // XXX MOCK\r\n        return {\r\n            id: 1,\r\n            name: 'Lonely Hooves'\r\n        };\r\n\r\n        // TODO test below\r\n        return await callGETMethod(Series.SERIES() + '/search/' + name);\r\n    }\r\n\r\n    static async chapters(seriesId){\r\n        // XXX MOCK\r\n        return [\r\n            {\r\n                id: 1,\r\n                name: 'Chapter 1',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Chapter 2',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Chapter 3',\r\n                image: 'abc'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Chapter 4',\r\n                image: 'abc'\r\n            },\r\n        ];\r\n\r\n        // TODO test below\r\n        return await callGETMethod(Series.PREFIX() + '/' + seriesId + Series.CHAPTER() + '/list');\r\n    }\r\n\r\n}\r\n\r\n\r\nvar Backend = {\r\n    Series\r\n};\r\n\r\nexport default Backend;"]},"metadata":{},"sourceType":"module"}